package com.vendor.gpl;

import java.security.Key;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import sun.misc.BASE64Decoder;

public class EncryptDecryptTester {

	public static void main(String[] args){
		String data="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";
		String key="sQm/UYzEbsaM/LonwWD595EJjjVWuZ7MyfxhMs+HUb0=";
		System.out.println(decryptBySymmentricKey(data,key));
	}
	
	  public static String decryptBySymmentricKey(String data, String decryptedSek) {
		     byte[] sekByte = Base64.getDecoder().decode(decryptedSek);
		     Key aesKey = new SecretKeySpec(sekByte, "AES");
		      try {
		           Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
		           cipher.init(Cipher.DECRYPT_MODE, aesKey);
		           byte[] decordedValue = new BASE64Decoder().decodeBuffer(data);
		           byte[] decValue = cipher.doFinal(decordedValue);
		           return new String(decValue);
		       } catch (Exception e) {
		           return "Exception " + e;
		        }
		    }	
}
